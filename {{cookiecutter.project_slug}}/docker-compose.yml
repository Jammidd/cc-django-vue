version: '3.3'

volumes:
    db_data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - database
    volumes:
      - ./backend:/app
    command: /start.sh
    {% if cookiecutter.db == 'PostgreSQL' %}
    entrypoint: /entrypoint.sh
    {% endif %}
    restart: on-failure
    env_file: .env

  frontend:
    build: 
      context: ./frontend
    command: npm run dev
    volumes:
      - ./.env:/app/.env:ro
      - ./frontend:/app
    working_dir: /app
    restart: on-failure

  {% if cookiecutter.db == 'PostgreSQL' %}
  database:
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file: .env
    ports:
      - '5432:5432'
  {% elif cookiecutter.db == 'MySQL' %}
  database:
    image: mysql:latest
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    env_file: .env
    ports:
      - '3306:3306'
  {% elif cookiecutter.db == 'MongoDB' %}
  database:
    image: mongo:latest
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - db_data:/data/db
    ports:
      - '27017:27017'
    command: mongod --smallfiles --logpath=/dev/null
  {% endif %}

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none
